// file: iotstyle.scss

@use 'sass:math';

// ===== Colors =====
// hue of 220 is signature of this style

$u-hue: 220;
$u-background: #e0e0e0;
$u-background-darkmode: #111111;
$u-text: #111111; // any text
$u-text-darkmode: #eeeeee; // any text

$u-primary: hsl(220, 80%, 30%); // active objects

$u-border-color: #555555;
$u-border-color-active: hsl(220, 100%, 30%);

$u-disabled: gray; // disabled objects
$u-heading: $u-primary; // any headlines
$u-connect: #00cc00; // connectivity / net

$u-card-border: none;
$u-card-radius: 0.4rem;

$u-on: lighten(green, 10%);
$u-off: red;

$u-border: 0.1em solid $u-border-color;
$u-border-none: 0.1em solid transparent;
$u-border-active: 0.1em solid $u-border-color-active;

$u-navbar: $u-primary;
$u-navbar-text: white;

// ===== Sizes =====

$white-space: 1rem;
$gutter: math.div($white-space, 2);
$gutter2: math.div($white-space, 4);

$u-btn-radius: 0.2em;
$u-output-border: $u-border-none;

$font-sans-serif: Arial, ui-sans-serif, sans-serif;

// ===== main =====

:root {
  --color: #{$u-text};
  --back: #{$u-background};

  --card-back: #{lighten($u-background, 20%)};
  --card-head: #{hsl($u-hue, 0%, 70%)};
  --card-head-active: #{hsl($u-hue, 80%, 70%)};
  --focus: #{hsl($u-hue, 50%, 50%)};

  color-scheme: dark light;
  @media (prefers-color-scheme: dark) {
    --color: #{$u-text-darkmode};
    --back: #{$u-background-darkmode};
    --card-back: #{lighten($u-background-darkmode, 15%)};
    --card-head: #{hsl($u-hue, 0%, 30%)};
    --card-head-active: #{hsl($u-hue, 80%, 30%)};
  }
}

html,
body {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: $font-sans-serif;
  font-size: 1em;
  color: var(--color);
  background-color: var(--back);
}

/* apply a natural box layout model to all elements, but allowing components to change */
*,
*::before,
*::after {
  box-sizing: inherit;
}

// ===== Text containers =====
p,
pre,
code,
h2,
h3,
h4 {
  margin: 0 0 $gutter 0;
  min-height: 1rem;

  > img,
  > svg {
    // assume image in text containers to be inline icons
    height: 1em;

    &:first-child {
      margin-right: 0.2em;
    }
  }
}

a,
a:visited,
a:hover {
  color: inherit;
  text-decoration: underline;
  cursor: pointer;
}

// h1 Page title is always inside u-header
h2,
h3,
h4 {
  font-family: $font-sans-serif;
  font-weight: bold;
}

// Chapter
h2 {
  font-size: 1.6em;
  min-height: 1.6em;
}

// Topic
h3 {
  font-size: 1.25em;
  min-height: 1.25em;
}

// Subtitle
h4 {
  font-size: 1em;
  min-height: 1em;
}

code,
.code,
code.hljs,
pre > code {
  background-color: rgb(255, 255, 185);
  color: $u-text;
  font-size: 1rem;
  font-family: 'Courier New', Courier, monospace;

  @media print {
    border: 1px solid $u-text;
  }
}

p > code {
  padding-left: 0.1em;
  padding-right: 0.1em;
}

pre > code {
  display: block;
  border-radius: $u-card-radius;
  padding: 0.1em;
}

// form elements

label,
input,
input+span,
input::placeholder,
select,
button {
  display: inline-block;
  font-size: inherit;
  margin: 0;
  border: $u-border-none;
  padding: 0.1em 0.2em;
  color: currentColor;
}

input::placeholder {
  padding-top: 0.4em;
  font-size: 0.6em;
}

label {
  cursor: pointer;
  height: 1.6em;

  > img,
  > .icon {
    // vertical-align: middle;
    width: 1em !important;
    height: 1em !important;
    margin: 0 !important;
  }
}

input,
select,
button {
  border-color: var(--color);
}

input[type='checkbox'],
input[type='radio'] {
  width: 2ch;
  vertical-align: baseline;
}

input,
select {
  width: 22ch;
  border-radius: 0.2em;
}

select {
  padding-left: 0;
}

// ===== Modal dialogs and focus Object

div[u-control='modal'] {
  position: fixed;
  visibility: visible;
  opacity: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: opacity 0.3s ease-in-out;

  &.hidden {
    visibility: hidden;
    opacity: 0;
  }

  .modalBack {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--back);
    opacity: 0.75;
  }

  .modalFrame {
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100px;
    min-height: 100px;
    transform: translateX(-50%) translateY(-50%);
    padding: 0.5em;
    background-color: var(--card-back);

    &::before,
    &::after {
      content: '';
      position: absolute;
      background-color: red;
      z-index: -1;
      width: 40px;
      height: 40px;
    }

    &::before {
      top: 0;
      right: 0;
    }

    &::after {
      bottom: 0;
      left: 0;
    }
  }

  .closedlg {
    position: absolute;
    top: 0.4rem;
    right: 0.4rem;
    height: 1.8rem;
    width: 1.8rem;
    background-color: red;
    background-size: 1.8rem 1.8rem;
    background-repeat: no-repeat;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'><path d='M12 12L36 36M36 12L12 36' stroke='white' stroke-width='8' stroke-linecap='round' /></svg>");
    z-index: 3 !important;
    user-select: none;
    cursor: pointer;
  }
}

.modal-object {
  position: fixed !important;
  z-index: 2 !important;
  margin: 0 !important;
}

// ===== Grid Design with grid of 6 =====

.container {
  margin-right: 2rem;
  margin-left: 2rem;

  @media (max-width: 720px) {
    margin-right: 0.6rem;
    margin-left: 0.6rem;
  }
}

.container-fluid {
  margin-right: 0;
  margin-left: 0;
  padding: $white-space;

  @media (max-width: 720px) {
    padding: 0;
  }
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-start;
  margin: 0 0 0 -$gutter;
  clear: both;
  padding: 0 0 $gutter 0;

  &.wrap {
    flex-wrap: wrap;
  }

  @media (max-width: 720px) {
    margin: 0;
  }

  &.nogutter {
    margin: 0;
    padding: 0;

    > .col {
      margin: 0;
      padding: 0;
    }
  }
}

.col,
.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6 {
  flex: 0 0 auto;
  margin: $gutter 0 0 $gutter;

  @media (max-width: 720px) {
    margin-left: 1px;
  }
}

.col.stretch {
  flex-grow: 1;
}

.col-1 {
  flex-basis: 16.66666667%;
}

.col-2 {
  flex-basis: 33.33333333%;
}

.col-3 {
  flex-basis: 50%;
}

.col-4 {
  flex-basis: 66.66666667%;
}

.col-5 {
  flex-basis: 83.33333334%;
}

.col-6 {
  flex-basis: 100%;
}

svg {
  &.button {
    width: 2em;
    height: 2em;

    .object {
      fill: $u-primary;
      fill-opacity: 1;
    }

    .connect {
      fill: $u-connect;
      fill-opacity: 1;
    }
  }

  &.icon {
    user-select: none;
    color: currentColor;
  }
}

// ===== Page Layout =====

// The header in the micro css is used to display the primary icon of the device and title.

.u-header {
  margin-bottom: 0;

  .icon {
    margin-right: $gutter;
    width: 2.6rem;
    height: 2.6rem;
    vertical-align: top;
  }

  h1 {
    margin: 0;
    font-size: 2.4rem;
    font-family: $font-sans-serif;
    font-weight: bold;
  }
}

// u-navbar is a horizontal always visible menu just below the header.

.u-navbar {
  margin-bottom: 0;
  padding: $gutter $white-space;
  height: 2.8rem;
  background-color: $u-navbar;

  > .gap {
    flex-grow: 2;
  }

  > button,
  > .button {
    text-decoration: none;
    font-size: 1.25em;
    min-width: 2em;
    color: $u-navbar-text;

    &:hover {
      border-color: var(--focus);
      background-color: var(--focus);
    }
  }

  > img.button,
  > svg.button {
    padding: 0;
    min-width: 1.4em !important;
    width: 1.4em !important;
    height: 1.4em !important;
  }

  @media print {
    display: none;
  }
}

// <nav> is a vertical menu that can slide in and out by using some scripting.
// <nav> is used together with <main> for content
// `inpage` class: nav is beside main content, not overlap
// open class: nav is visible, maybe main needs to shift

nav {
  position: fixed;
  min-height: 100%;
  width: 280px;
  z-index: 1;
  left: -280px;
  transition: all 0.2s;
  padding: 1rem 0.2rem 0.2rem;
  background-color: var(--card-back);

  &.inpage {
    position: absolute;
  }

  &.open {
    left: 0;
  }

  &.inpage.open + main {
    margin-left: 280px;

    @media print {
      margin-left: 0;
    }
  }

  @media print {
    display: none;
  }
}

main {
  transition: margin-left 0.2s;
}

// ===== Cards =====

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: var(--card-back);
  border: $u-card-border;
  border-radius: $u-card-radius;
  width: 23rem;
  min-width: 23rem;

  @media print {
    border: 1px solid $u-text;
  }

  &.small {
    // reduced width and text size
    font-size: 0.8em;
    width: 11.25rem;
    min-width: 11.25rem;

    .form-grid {
      grid-template-columns: auto;

      > label {
        text-align: left;
      }
    }
  }

  &.active {
    .border {
      border-color: $u-border-color-active;
    }

    .band::-webkit-slider-thumb {
      border-color: $u-border-color-active transparent;
    }

    > .block.header {
      background-color: var(--card-head-active);
    }
  }

  .icon {
    width: 2.75em;
    height: 2.75em;
    float: left;
    margin-right: $gutter;
    overflow: hidden;
  }

  img,
  svg {
    &.active {
      background-color: limegreen;
    }
  }

  > .block {
    position: relative;
    flex: 1 1 auto;
    padding: $gutter $white-space;
    min-height: 2em;

    &.header {
      background-color: var(--card-head);
      border-top-right-radius: $u-card-radius;
      border-top-left-radius: $u-card-radius;
      min-height: 2.75em; // with or without icon

      h3,
      h4 {
        margin-bottom: 0;
      }
    }

    &.footer {
      padding: $gutter $white-space;
      border-top: 1px solid rgba(0, 0, 0, 0.125);

      > *:not(:first-child) {
        margin-left: $gutter;
      }
    }
  }

  > hr {
    background-color: rgba(0, 0, 0, 0.125);
    border: 0;
    height: 1px;
    margin: 0;
    padding: 0;
  }
}

// ===== forms elements and groups =====

button,
.button {
  display: inline-block;
  min-width: 6.5ch;
  // height: 1.4em;
  padding: 0.1em 0.2em;
  border-radius: $u-btn-radius;
  border-color: $u-primary;
  background-color: $u-primary;
  color: white;
  cursor: pointer;
  user-select: none;

  &:visited {
    color: white;
  }

  &:disabled,
  &:disabled:focus {
    border-color: $u-disabled;
    background-color: $u-disabled;
  }

  &.active {
    background-color: #acc1e4 !important;
    border-color: #203050 !important;
  }

  &.secondary {
    background-color: #777777;
    border-color: #777777;
  }

  + button,
  + .button {
    margin-left: $gutter;
  }
}

// standard input elements

option[disabled] {
  color: $u-disabled;
}

// slider implemented using input[type=range] element

input[type='range'] {
  appearance: none;
  -webkit-appearance: none; // stylelint-disable-line property-no-vendor-prefix
  vertical-align: top;
  margin: 0.2em;
  height: 1.2em;
  padding: 0;
  width: 9.8em;
  transition: 0.4s all ease-out;
  // border: 1px solid #555555;
  border-radius: 0.6em;

  &::-webkit-slider-thumb {
    appearance: none;
    -webkit-appearance: none; // stylelint-disable-line property-no-vendor-prefix
    height: 1em;
    width: 1em;
    border-radius: 0.5em;
    background: #203050;
    border: 1px solid #f0f0f0;
    cursor: pointer;
  }
}

// switch = slider with range 0..1

input.switch[type='range'] {
  pointer-events: none;
  width: 2.5em !important;
}

*:focus {
  outline: 0;
  box-shadow: 0 0 0.1rem 0.2rem var(--focus);
}

.btn-group {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-start;

  > * {
    flex: 1 1 auto;
    margin: 0;
    border-radius: 0;
  }

  > *:first-child {
    border-top-left-radius: $u-btn-radius;
    border-bottom-left-radius: $u-btn-radius;
  }

  > *:last-child {
    border-top-right-radius: $u-btn-radius;
    border-bottom-right-radius: $u-btn-radius;
  }
}

.form-grid {
  display: grid;
  grid-template-columns: 12.6ch auto;
  grid-gap: 5px;

  > * {
    grid-column-end: -1;
  }

  > label {
    grid-column: 1;
    text-align: right;
  }

  > .wide {
    grid-column: 1/-1;
  }
}

.form-inline {
  height: 1.6em;

  > * {
    vertical-align: top;
  }
}

.invalid {
  border: 2px solid #ff1111 !important;
  background-color: #ffcccc !important;
  color: $u-text;
}

.valid {
  border: 2px solid #00cc00 !important;
  background-color: #ccffcc !important;
  color: $u-text;
}

// ===== element Icons =====

.element {
  position: relative;
  display: inline-block;
  height: 6rem;
  width: 6rem;
  margin: 0.6rem;

  &.wide {
    width: 10rem;
  }

  > svg,
  > img {
    position: relative;
    left: 1rem;
    top: 0.4rem;
    height: 4rem;
    width: 4rem;
  }

  > .id {
    position: absolute;
    display: inline-block;
    bottom: 0.4rem;
    left: 0;
    height: 1rem;
    width: 6rem;
    text-align: center;
  }

  > .info {
    position: absolute;
    display: inline-block;
    top: 0.4rem;
    right: 0;
    height: 5.2rem;
    width: 4rem;
  }
}

// ===== Value indicators for the web UI =====
// using ux- prefix.

.u-bool {
  display: inline-block;
  height: 1.4rem;
  width: 1.4rem;
  border-radius: 0.7rem;
  text-align: center;
  background-color: silver;
}

.u-bool[value='1'] {
  background-image: linear-gradient(145deg, lighten($u-on, 30%), $u-on);
}

.u-bool[value='0'] {
  background-image: linear-gradient(145deg, lighten($u-off, 30%), $u-off);
}

// visualizing the output level 0...max
.ux-levelbar {
  display: inline-block;
  border-color: $u-primary;
  border-style: solid;
  border-width: 1px;
  width: 32px;
  height: 64px;
}

// show something on the right side of the card visualizing the actual value of the element

.ux-value {
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
}

// Timer-bar

.u-bar {
  position: relative;
  height: 1.4em;
  width: 100%;
  background-color: #aaaaaa;
}

.u-bar > .pulse,
.u-bar > .current {
  display: inline-block;
  position: absolute;
}

.u-bar > .pulse {
  top: 0;
  left: 0;
  height: 1.4em;
  background-color: green;
}

.u-bar > .current {
  top: 0.4em;
  height: 0.6em;
  background-color: red;
}

.text-right {
  text-align: right;
}

.border {
  border: $u-border;
}

/* === Display Element === */

.display {
  position: relative;
  box-sizing: content-box;
  background-color: $u-background;
  margin: auto;
  width: 128px;
  height: 64px;
  border: 2px solid $u-border-color;
  zoom: 2;

  > span {
    box-sizing: border-box;
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    height: 10px;
    overflow: hidden;
    background-color: transparent;

    &.text {
      color: $u-text;
      font-size: 10px;
      line-height: 10px;
    }

    &.dot {
      height: 10px;
      width: 10px;
      border-radius: 50%;

      &.active {
        background-color: green;
      }
    }

    &.line {
      border-top: 1px solid black;
    }
  }
} // #display

.displayinc {
  position: relative;
  margin: auto;
  zoom: 2;

  > .icon {
    width: 1.2em;
    height: 1.2em;
    margin: 0;
  }
}

/* === Light input sliders === */

input.band {
  width: 100%;
  border-radius: 0;
  border-width: 1px;

  &.hue {
    background: linear-gradient(
      to right,
      red 0%,
      yellow 17%,
      lime 33%,
      aqua 50%,
      blue 67%,
      fuchsia 83%,
      red 100%
    );
  }

  &.white,
  &.lightness,
  &.saturation {
    background: linear-gradient(to right, black 0%, white 100%);
  }
}

/* === Responsive Utilities === */

.display-xs {
  display: none;
}

@media (max-width: 767px) {
  .hidden-xs {
    display: none;
  }

  .display-xs {
    display: initial;
  }
}
