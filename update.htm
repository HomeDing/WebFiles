<!--
  This is the source file for the built-in update dialog in HomeDing devices. 
  like http://plug02/$update
-->

<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Web Update</title>
</head>

<body style="width:300px">
  <h1>Web Update</h1>
  <div style="display:grid">
    <progress value=0 max=20></progress>
    <span id='l'></span>
  </div>
  <div style="text-align: right;"><button>Start</button></div>

  <hr>
  <p style="text-align: right;"><a href="/updateicons.htm" title="next step"
      style="text-decoration: none;">&gt;&gt;&gt;</a></p>
  <script>
    var s = 0;
    // s == 0 => fetching list
    // s == 1 => fetching sysinfo
    // s == 2 => cleanweb
    // s == 3 => copy file 
    // s == 4 => wait for file finished 

    var repo = 'https://homeding.github.io/';
    var d = document;
    var eBar = d.querySelector('progress');
    var x = 0; // done
    var a = 0; // active
    var w; ///< working list
    var si; // sysinfo
    var t = 0; // timer
    var seed = "?" + new Date().valueOf();

    function log(t) {
      d.querySelector('#l').innerText = t;
    } // log

    if (location.hash) {
      repo += location.hash.substring(1) + '/';
    } else {
      repo += 'v09/';
    }
    log('loading from:\n' + repo);


    // grab next file
    function doF() {
      var theItem = w.shift();

      // set progress
      eBar.value = ++x;
      log(theItem);

      if (theItem[0] === '-') {
        a = 0;

      } else {
        fetch(repo + theItem + seed)
          .then(result => result.arrayBuffer())
          .then(function(buf) {
            var formData = new FormData();
            formData.append('file', new Blob([buf]), '/' + theItem);
            fetch('/', { method: 'POST', body: formData })
              .then(() => { a = 0; });
          });
      }
    } // doF()


    d.querySelector('button').addEventListener('click', function() {
      t = window.setInterval(function() {
        if (a) {
          // wait
        } else {
          a = 1;
          if (s == 0) { // not yet started
            // fetch file list;
            log('sysinfo...');
            fetch('/api/sysinfo' + seed)
              .then(result => result.text())
              .then(t => {
                si = t;
                eBar.value = ++x;
                a = 0;
              });
            s++;

          } else if (s == 1) {
            log('list...');
            si = JSON.parse(si);
            if (si.fsTotalBytes < 200000) {
              repo = repo.replace(/(v\d+)\/$/, "$1m/");
            }

            fetch(repo + 'list.txt' + seed)
              .then(result => result.text())
              .then(t => {
                w = t.replace(/\r?\n/g, ';').replace(/;$/, '').split(';');
                eBar.max = w.length + 3;
                a = 0;
              });
            s++;

          } else if (s == 2) {
            // clean files in filesystem first
            log('clean...');
            fetch('/api/cleanweb')
              .then(() => {
                eBar.value = ++x;
                s++;
                a = 0;
              });

          } else if (s == 3) {
            if (w.length > 0) {
              doF();
            } else {
              window.clearInterval(t);
              eBar.value = ++x;
              log('done');
            }
          }
        }
      }, 100);
    });
  </script>
</body>

</html>