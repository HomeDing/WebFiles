<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <title>Gauge Charts</title>

  <link Content-Type="text/css" href="/iotstyle.css" rel="stylesheet" />
  <style>
    pre.code {
      display: block;
      margin: 0.5em 0;
      border: solid 1px black;
      padding: 0.2em;
      font-family: Courier New, Courier, monospace;
      font-size: 0.75em;
      line-height: 1.2;
      color: black;
      background-color: rgb(255, 255, 240);
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Gauge Charts</h1>
    <p>
      <button id="doClear">clear</button>
      <button id="doCase1a">Room</button>
      <button id="doCase1b">Outside</button>
      <button id="doCase2">Humidity</button>
      <button id="doCase3">Height</button>
    </p>
    <p>
      <button onclick="chartAPI.clear();" >clear</button>
      <button onclick="chartAPI.draw('x');" >NaN</button>
      <button onclick="chartAPI.draw(0);" >0</button>
      <button onclick="chartAPI.draw(1);" >1</button>
      <button onclick="chartAPI.draw(10);" >10</button>
      <button onclick="chartAPI.draw(35);" >35</button>
      <button onclick="chartAPI.draw(100);" >100</button>
    </p>

    <object id="testChart" data="chartgauge.svg" type="image/svg+xml"
      style="width:300px;height:300px;background-color:#cccccc"></object>

    <hr />

    <h3>Gauge Chart Data</h3>

    <p>The data passed to the draw function is a single value only:</p>
    <pre class="code">
chartAPI.draw(12.8);
</pre>

    <h3>Gauge Chart Options</h3>

    <p>Using the options the look of the gauge can be setup.</p>

    <ul>
      <li><b>title</b> - This text will be displayed on top of the gauge. </li>
      <li><b>units</b> - This text will be displayed below the actual value. </li>
      <li><b>minimum</b> - This text will be displayed at the start point of the gauge.</li>
      <li><b>maximum</b> - This text will be displayed at the end point of the gauge.</li>
      <li><b>segments</b> - This array contains upper value and color of gauge segments.</li>
    </ul>

    <pre class="code">
chartAPI.setOptions({
  title: "Room Temperature",
  units: "°C",
  minimum: 5,
  maximum: 45,
  segments: [
    {
      value: 18,
      color: 'white'
    }, {
      value: 22,
      color: '#44ff44'
    }, {
      color: '#ff4444'
    }

  ]
});
</pre>

  </div>

  <script>
    var chartObj = document.getElementById('testChart');
    var chartAPI;

    function chartClear() { chartAPI.clear(); }

    function case1a() {
      chartAPI.setOptions({
        title: "Room Temperature",
        units: "°C",
        minimum: 5,
        maximum: 45,
        segments: [
          {
            value: 18, color: '#aaaadd'
          }, {
            value: 22, color: '#33cc33'
          }, {
            color: '#ff4444'
          }
        ]
      });

      chartAPI.draw(26.7);
    }

    function case1b() {
      chartAPI.setOptions({
        title: "Outside Temperature",
        units: "°C",
        minimum: -20,
        maximum: 55,
        segments: [
          {
            value: -2, color: '#aaaaee'
          },
          {
            value: 8, color: 'white'
          },
          {
            value: 33, color: '#33aa33'
          }, {
            color: '#ff4444'
          }
        ]
      });

      chartAPI.draw(2.5);
    }

    function case2() {
      chartAPI.setOptions({
        title: "Room Humidity",
        units: "%",
        minimum: 0,
        maximum: 100,
        segments: [
          {
            value: 40, color: '#ff4444'
          }, {
            value: 60, color: '#44ff44'
          }, {
            color: '#ff4444'
          }
        ]
      });

      chartAPI.draw(44.2);
    }

    function case3() {
      chartAPI.setOptions({
        title: "Height",
        units: "mm",
        minimum: 0,
        maximum: 1000
      });
      chartAPI.draw(640);
    }

    window.addEventListener('load', function () {
      chartAPI = chartObj.getSVGDocument().api;
      case1a();

      document.getElementById('doClear').addEventListener('click', chartClear);

      document.getElementById('doCase1a').addEventListener('click', case1a);
      document.getElementById('doCase1b').addEventListener('click', case1b);
      document.getElementById('doCase2').addEventListener('click', case2);
      document.getElementById('doCase3').addEventListener('click', case3);

    });
  </script>
</body>

</html>