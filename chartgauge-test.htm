<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <title>Gauge Charts</title>

  <link Content-Type="text/css" href="/iotstyle.css" rel="stylesheet" />
  <style>
    pre.code {
      display: block;
      margin: 0.5em 0;
      border: solid 1px black;
      padding: 0.2em;
      font-family: Courier New, Courier, monospace;
      font-size: 0.75em;
      line-height: 1.2;
      color: black;
      background-color: rgb(255, 255, 240);
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Gauge Chart Test Page</h1>
    <p>
      <button id="doClear">clear</button>
      <button id="doCase1a">Room</button>
      <button id="doCase1b">Outside</button>
      <button id="doCase2">Humidity</button>
      <button id="doCase3">Height</button>
    </p>
    <p>
      <button onclick="chartAPI.clear();">clear</button>
      <button onclick="chartAPI.draw('x');">NaN</button>
      <button onclick="chartAPI.draw(0);">0</button>
      <button onclick="chartAPI.draw(1);">1</button>
      <button onclick="chartAPI.draw(10);">10</button>
      <button onclick="chartAPI.draw(35);">35</button>
      <button onclick="chartAPI.draw(100);">100</button>
    </p>

    <p>API Documentation available at <a
        href="https://homeding.github.io/#page=microchart-gauge.md">https://homeding.github.io/#page=microchart-gauge.md</a>
    </p>

    <h3>Gauge Chart</h3>
    <object id="testChart" data="chartgauge.svg" type="image/svg+xml"
      style="width:300px;height:300px;background-color:#cccccc"></object>

    <h3>Pie Chart Data</h3>
    <p>The data passed to the draw function:</p>
    <pre id="theData" class="code"></pre>

    <h3>Pie Chart Options</h3>
    <p>The current options:</p>
    <pre id="theOptions" class="code"></pre>
  </div>

  <script>
    var chartObj = document.getElementById('testChart');
    var chartAPI;

    function chartClear() {
      chartAPI.clear();
      document.querySelector('#theOptions').textContent = '';
      document.querySelector('#theData').textContent = '';
    }

    function case1a() {
      var opts = {
        title: "Room Temperature",
        units: "°C",
        minimum: 5,
        maximum: 45,
        segments: [
          { value: 18, color: '#aaaadd' },
          { value: 22, color: '#33cc33' },
          { color: '#ff4444' }
        ]
      };
      var data = 26.7;

      chartAPI.setOptions(opts);
      chartAPI.draw(data);
      document.querySelector('#theOptions').textContent = JSON.stringify(opts, null, 2);
      document.querySelector('#theData').textContent = JSON.stringify(data, null, 2);
    }

    function case1b() {
      var opts = {
        title: "Outside Temperature",
        units: "°C",
        minimum: -20,
        maximum: 55,
        segments: [
          { value: -2, color: '#aaaaee' },
          { value: 8, color: 'white' },
          { value: 33, color: '#33aa33' },
          { color: '#ff4444' }
        ]
      };
      var data = 2.5;

      chartAPI.setOptions(opts);
      chartAPI.draw(data);
      document.querySelector('#theOptions').textContent = JSON.stringify(opts, null, 2);
      document.querySelector('#theData').textContent = JSON.stringify(data, null, 2);
    }

    function case2() {
      var opts = {
        title: "Room Humidity",
        units: "%",
        minimum: 0,
        maximum: 100,
        segments: [
          {
            value: 40, color: '#ff4444'
          }, {
            value: 60, color: '#44ff44'
          }, {
            color: '#ff4444'
          }
        ]
      };
      var data = 44.2;

      chartAPI.setOptions(opts);
      chartAPI.draw(data);
      document.querySelector('#theOptions').textContent = JSON.stringify(opts, null, 2);
      document.querySelector('#theData').textContent = JSON.stringify(data, null, 2);
    }

    function case3() {
      var opts ={
        title: "Height",
        units: "mm",
        minimum: 0,
        maximum: 1000
      };
      var data = 640;

      chartAPI.setOptions(opts);
      chartAPI.draw(data);
      document.querySelector('#theOptions').textContent = JSON.stringify(opts, null, 2);
      document.querySelector('#theData').textContent = JSON.stringify(data, null, 2);
    }

    window.addEventListener('load', function () {
      chartAPI = chartObj.getSVGDocument().api;
      case1a();

      document.getElementById('doClear').addEventListener('click', chartClear);

      document.getElementById('doCase1a').addEventListener('click', case1a);
      document.getElementById('doCase1b').addEventListener('click', case1b);
      document.getElementById('doCase2').addEventListener('click', case2);
      document.getElementById('doCase3').addEventListener('click', case3);

    });
  </script>
</body>

</html>