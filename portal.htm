<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>HomeDing Portal</title>
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name="application-name" content="Ding" />
  <meta name="msapplication-config" content="/browserconfig.xml" />
  <meta name="msapplication-TileColor" content="#2b5797" />
  <meta name="msapplication-TileImage" content="/favicon144.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/favicon180.png" />
  <meta name="mobile-web-app-capable" content="yes" />
  <link rel="manifest" href="/site.webmanifest" />
  <meta name="theme-color" content="#ffffff" />

  <link Content-Type="text/css" href="/iotstyle.css" rel="stylesheet" />
  <script src="/micro.js"></script>

  <style>
    ul.devices>hr {
      border: 0
    }

    ul.devices>li {
      margin-bottom: 0.3em;
    }
  </style>
</head>

<body class="sitelayout fillscreen" style="--layout-gap: 0;--main-back:transparent">
  <header>
    <h1>HomeDing Portal</h1>
  </header>

  <nav class="navbar">
    <svg class="button" id="menuButton" tabindex=0>
      <use href="./icons.svg#menu" />
    </svg>
    <a href="#/board.htm">HomePortal</a>
    <span class="gap"></span>
    <a href="#/monitor.htm">Monitor</a>
    <svg class="button" id="reload" tabindex=0>
      <use href="./icons.svg#reload" />
    </svg>
  </nav>

  <nav class="menu open">
    <ul id="devices" style="padding-inline-start: 1rem;list-style-type: none;">
    </ul>
  </nav>
  
  <main>
    <iframe id="content" name="content" style="width: 100%;height:100%;border:0" src="about:blank"></iframe>
  </main>
  </div>

  <script>
    const param = {
      SCREEN_TIMEOUT: 4 * 60 * 1000,
      MENU_MIN_WIDTH: 1030
    };

    var iframeObj = document.querySelector('iframe#content');
    var timerRef = 0;

    // handle nav menu
    var devList = [];

    // when the user is not using the application for SCREEN_TIMEOUT milliseconds
    // the portal will go to idle mode.
    // call resetTimeout when user activity is detected.
    function resetTimeout() {
      if (timerRef) window.clearTimeout(timerRef);
      timerRef = window.setTimeout(() => {
        iframeObj.src = 'portalidle.htm';
        window.location.hash = '';
      }, param.SCREEN_TIMEOUT);
    }

    function setupMenu() {
      var mbObj = document.querySelector('#menuButton');
      var navObj = document.querySelector('nav.menu');

      navObj.classList.remove('open');

      navObj.addEventListener('click', function(e) {
        navObj.classList.remove('open');
        resetTimeout();
      });

      mbObj.addEventListener('click', function(e) {
        navObj.classList.toggle('open');
        resetTimeout();
      });

    } // setupMenu()

    function loadDevices() {
      fetch('/api/discovery')
        .then(function(result) {
          return result.json();
        })
        .then(function(data) {
          devList = data;
          var devObj = document.querySelector('#devices')

          for (d in data) {
            var devData = data[d];
            var o = createHTMLElement(devObj, 'li');
            createHTMLElement(o, 'a', { href: '#' + d + devData.path }).innerText = devData.title || d;
          }
          window.setTimeout(startContent, 10);
        });
    } // loadDevices()

    // display to content in iframe, specified by url-hash
    function startContent() {
      var h = String(window.location.hash);

      if (h) {
        h = h.substring(1);
        if (h.startsWith('/')) {
          // "/monitor.htm"
          // show html from the portal app
          iframeObj.src = h;

        } else {
          // "#nodeding/board.htm"
          // show html from a device
          iframeObj.src = 'http://' + h;
        } // if
      } // if
      resetTimeout();
    } // startContent()

    window.addEventListener('hashchange', startContent);

    window.addEventListener('load', () => {
      setupMenu();
      loadDevices();
      if (!window.location.hash) {
        window.location.hash = "#/board.htm";
      }
    });

    document.querySelector('#reload').addEventListener('click', function() {
      window.location.reload(true);
      resetTimeout();
    });
  </script>
</body>

</html>