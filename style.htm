<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Style Reference</title>
  <link Content-Type="text/css" href="iotstyle.css" rel="stylesheet" />

  <style>
    div.c {
      border: 1px solid grey;
      padding: 0.4rem;
      margin-bottom: 0.4rem;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="u-header">
      <a href="/" title="Go to Startpage"><img class="icon" src="/favicon.svg" /></a>
      <h1>Style</h1>
      <a href="/ding-ide.htm" title="Start IDE"><img class="icon" 
        src="/i/ide.svg" /><span class="hidden-xs">IDE</span></a>
      <a href="/ding-info.htm" title="Start Config"><img class="icon" 
          src="/i/config.svg" /><span class="hidden-xs">Config</span></a>
    </div>

    <div class="c">
      <h2>Header</h2>
      <ul>
        <li>The height of text is adjusted to <code>2rem</code>. Keep text short.</li>
        <li>Place the <code>&lt;h1&gt;</code> element inside for page title.</li>
        <li>Use <code>&lt;a&gt;</code> elements inside for navigation.</li>
        <li>Use <code>class="hidden-xs"</code> to hide text elements.</li>
      </ul>
    </div>
    <div class="c">
      <h2>Typo</h2>
      <blockquote>
        <h2>Chapter headings h2</h2>
        <h3>Topic headings h3</h3>
        <h4>Subtitles h4</h4>
        <p>Normal floating text with <a href="#">links</a>.</p>
      </blockquote>
    </div>

    <div class="c">
      <h2>Cards</h2>
      <div class="card">
        <div class="block header">
          <h2><img src="/i/home.svg" />Heading-h2</h2>
            <h4>Sub-Heading-h4</h4>
        </div>
        <div class="block">
          <p><a href="ding.htm">Links</a></p>
          <p>Links can also be <a href="ding.htm">inline</a>.</p>
          <button>action</button><button disabled>disabled</button>
        </div>
      </div>
    </div>
    <hr>
    <p>Elements will have 2 cards each. The first one is for inspecting the current state of the element and triggering
      actions. The second one is for changing the configuration of an element.</p>

    <div class="c">
      <h2>Indicators</h2>
      <span class="u-indicator"></span>
      <span class="u-indicator" value="0"></span>
      <span class="u-indicator" value="1"></span>
    </div>
    <p>Indicators are used to inform about a logical level of an element. This can be unknown, off/false or on/true.</p>

    <div class="c">
      <h2>Element Icons</h2>
      <div class="element">
        <img src="/i/bulb.svg">
        <span class="u-indicator"></span>
        <span class="id">Entry</span>
      </div>

      <div class="element">
        <img src="/i/timer.svg" />
        <span class="u-indicator" value="0"></span>
        <span class="id">GardenWater</span>
      </div>

      <div class="element">
        <img src="/i/value.svg" />
        <span class="u-indicator" value="1"></span>
        <span class="id">volume</span>
      </div>

      <div class="element wide">
        <img src="/i/dht.svg" />
        <span class="u-indicator" value="1"></span>
        <span class="id">kitchen</span>
        <span class="info">37Â°C</span>
      </div>
    </div>
    <p>Elements can be placed on maps and dashboard by using the element icons. Some elements provide a on/off value
      that can be shown as a red and green indicator. Other elements do have a main value that can be shown aside the
      element.
    </p>
    <h2>Switch</h2>
    <div class="c">
      <div id="us" class="u-switch">
        <label value="0">left</label>
        <div class="box">
          <div class="handle"></div>
        </div>
        <label value="1">right</label>
      </div>
    </div>
  </div>

  </div>


  <script>
    function toggle(evt) {
      var hObj = evt.srcElement;
      window.status = evt.target.nodeName;
      var tObjV = evt.target.attributes['value'];

      if ((tObjV) && (tObjV.value == 1)) {
        this.value = 1;
      } else if ((tObjV) && (tObjV.value == 0)) {
        this.value = 0;
      } else if (this.value == 1) {
        this.value = 0;
      } else if (this.value == 0) {
        this.value = 1;
      } // if

      if (this.value == 1) {
        this.classList.add("active");
      } else {
        this.classList.remove("active");
      } // if
    }

    var usObj = document.getElementById('us');
    usObj.addEventListener("click", toggle);
    usObj.value = 0;
  </script>
</body>